program BackEnd;

{$APPTYPE CONSOLE}

{$R *.res}

uses
  Horse,
  ActiveX,
  System.JSON,
  Horse.Jhonson,
  Rest.Json,
  System.Classes,
  Horse.Commons,
  untFuncoes in 'untFuncoes.pas',
  untDataModulo in 'untDataModulo.pas' {DataModuloPrincipal: TDataModule},
  untClasses in 'untClasses.pas';

var
  App : THorse;
  Users: TJSONArray;

begin
  CoInitialize(nil);
  App := THorse.Create(9000);

  App.Use(Jhonson);

  Users :=  TJSONArray.Create;

  App.Get('/users',
    procedure(Req: THorseRequest; Res: THorseResponse; Next: TProc)
    var
      LocJson: TStringlist;
    begin
      try
      LocJson := TStringlist.Create;
      LocJson := BuscarUsuarioNome('Maria');
      Res.Send(LocJson);
      finally
        if Assigned(LocJson) then
        begin
          LocJson:= nil;
          LocJson.Free;
        end;
      end;
    end);

  {App.Post('/users',
    procedure(Req: THorseRequest; Res: THorseResponse; Next: TProc)
    var
      LocUser: TJSONObject;
    begin
      LocUser:=Req.Body<TJSONObject>.Clone as TJSONObject;
      Users.AddElement(LocUser);
      Res.Send<TJSONAncestor>(Users.Clone).Status(THTTPStatus.Created);
    end);}

  App.Start;
end.
